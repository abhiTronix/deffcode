# This yaml file is based on modified code from vidgear(https://github.com/abhiTronix/vidgear)

# Copyright (c) 2019 Abhishek Thakur(@abhiTronix) <abhi.una12@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# specific path build
trigger:
 branches:
   include:
   - master
 paths:
   exclude:
   - docs
   - README.md

pr:
  - master

pool:
  vmImage: 'macOS-latest'

strategy:
  matrix:
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Using Python $(python.version)'

- bash: |
    brew install swig
    brew install ffmpeg
    brew reinstall openssl
    brew install unzip
    brew install dos2unix
    brew install coreutils
    dos2unix scripts/bash/prepare_dataset.sh
    chmod +x scripts/bash/prepare_dataset.sh
  displayName: 'Install brew dependencies'

- bash: |
    bash scripts/bash/prepare_dataset.sh
  displayName: 'Prepare dataset'

- script: |
    python -m pip install --upgrade pip wheel numpy
    pip install --upgrade vidgear[core] opencv-python-headless codecov pytest pytest-cov pytest-azurepipelines
    pip install --upgrade .
  displayName: 'Install pip dependencies'

- script: |
    timeout 1500 pytest -sv --cov=deffcode --cov-report=xml --cov-report=html --cov-report term-missing tests/ || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; else echo "##vso[task.setvariable variable=exit_code]$code"; fi
  displayName: 'pytest'
  
- bash: |
    echo "Exit Code was: $(exit_code)"
    curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
    curl -Os https://uploader.codecov.io/latest/macos/codecov
    curl -Os https://uploader.codecov.io/latest/macos/codecov.SHA256SUM
    curl -Os https://uploader.codecov.io/latest/macos/codecov.SHA256SUM.sig
    gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
    shasum -a 256 -c codecov.SHA256SUM
    chmod +x codecov
    if [ "$(exit_code)" != "124" ]; then
      ./codecov -t $CODECOV_TOKEN -f coverage.xml -C $(Build.SourceVersion) -B $(Build.SourceBranch) -b $(Build.BuildNumber);
    else
      echo "Timeout test - Skipped Codecov!"; 
    fi
  env:
    CODECOV_TOKEN: $(TOKEN)
  displayName: Upload coverage to CodeCov
  